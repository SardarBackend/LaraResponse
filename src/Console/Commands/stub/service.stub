<?php

namespace {{namespace}};
use SardarBackend\RestfulApiHelper\Helpers\ServiceResult;
use SardarBackend\RestfulApiHelper\Helpers\ServiceWrapper;
use App\Models\{{class}};
use Illuminate\Contracts\Debug\ExceptionHandler;
use Illuminate\Support\Facades\Hash;
use Illuminate\Database\Eloquent\Collection;

class {{class}}Services
{
    public function getAll():ServiceResult
    {
        return app(ServiceWrapper::class)(function() {
            return {{class}}::paginate(10);
        });
    }

    public function getInfo({{class}} $id):ServiceResult
    {

        return app(ServiceWrapper::class)(function() {
            return (new Collection([{{class}}::find($id)]));
        });

    }


    public function register{{class}}(array $inputs):ServiceResult
    {
        return app(ServiceWrapper::class)(function() use($inputs){
            ${{class}}={{class}}::create($inputs);
            return ${{class}};
        });

    }


    public function Update{{class}}(array $inputs,int $id):ServiceResult
    {
        return app(ServiceWrapper::class)(function() use($inputs,$id){
            ${{class}} = {{class}}::find( $id);
            ${{class}}->update($inputs);
            ${{class}} = ${{class}}->fresh();


            return ${{class}};
        });

    }

    public function Delete{{class}}(int $id):ServiceResult
    {
        return app(ServiceWrapper::class)(function() {
            return {{class}}::find($id)->delete();
        });

    }

}
